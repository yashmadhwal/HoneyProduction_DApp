/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  HONEYPRODUCTION,
  HONEYPRODUCTIONInterface,
} from "../HONEYPRODUCTION";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_serialNumber",
        type: "uint256",
      },
    ],
    name: "getHoneyInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "serialNumber",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "packagingDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "quantityWeight",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "honeyType",
            type: "string",
          },
          {
            internalType: "address",
            name: "Producer",
            type: "address",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct HONEYPRODUCTION.Honey",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_producerAddress",
        type: "address",
      },
    ],
    name: "getProducerInfo",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_serialNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_quantityWeight",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_honeyType",
        type: "string",
      },
    ],
    name: "modifyInfo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_producerAddress",
        type: "address",
      },
    ],
    name: "permitAccess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "permitted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_quantityWeight",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_honeyType",
        type: "string",
      },
    ],
    name: "producePackage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_producerAddress",
        type: "address",
      },
    ],
    name: "revokeAccess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_serialNumber",
        type: "uint256",
      },
    ],
    name: "sellProduct",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "serialNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611c428061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80638da5cb5b116100715780638da5cb5b14610165578063920864b714610183578063c96f8145146101b3578063eea04fe3146101e3578063f2fde38b146101ff578063fab7b2381461021b576100b4565b80632a0daeea146100b9578063492deb15146100d75780636cc301e3146100f3578063715018a61461012357806385e685311461012d5780638837fad114610149575b600080fd5b6100c1610237565b6040516100ce9190610e30565b60405180910390f35b6100f160048036038101906100ec9190610e8b565b61023d565b005b61010d60048036038101906101089190610f16565b6103c3565b60405161011a9190610f5e565b60405180910390f35b61012b6103e3565b005b61014760048036038101906101429190610f16565b6103f7565b005b610163600480360381019061015e91906110bf565b6104ed565b005b61016d610684565b60405161017a919061113d565b60405180910390f35b61019d60048036038101906101989190610e8b565b6106ad565b6040516101aa919061128d565b60405180910390f35b6101cd60048036038101906101c89190610f16565b61083f565b6040516101da919061135e565b60405180910390f35b6101fd60048036038101906101f89190610f16565b6108d6565b005b61021960048036038101906102149190610f16565b6109cc565b005b61023560048036038101906102309190611380565b610a4f565b005b60015481565b806003600082815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d990611439565b60405180910390fd5b6001548210610326576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031d906114a5565b60405180910390fd5b600015156003600084815260200190815260200160002060040160149054906101000a900460ff16151514610390576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038790611511565b60405180910390fd5b60016003600084815260200190815260200160002060040160146101000a81548160ff0219169083151502179055505050565b60026020528060005260406000206000915054906101000a900460ff1681565b6103eb610c7f565b6103f56000610cfd565b565b6103ff610c7f565b60011515600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514610492576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104899061157d565b60405180910390fd5b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b826003600082815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610592576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058990611439565b60405180910390fd5b600083116105d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105cc906115e9565b60405180910390fd5b600015156003600086815260200190815260200160002060040160149054906101000a900460ff1615151461063f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063690611655565b60405180910390fd5b8260036000868152602001908152602001600020600201819055508160036000868152602001908152602001600020600301908161067d9190611881565b5050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6106b5610dc9565b60015482106106f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f09061199f565b60405180910390fd5b600360008381526020019081526020016000206040518060c0016040529081600082015481526020016001820154815260200160028201548152602001600382018054610745906116a4565b80601f0160208091040260200160405190810160405280929190818152602001828054610771906116a4565b80156107be5780601f10610793576101008083540402835291602001916107be565b820191906000526020600020905b8154815290600101906020018083116107a157829003601f168201915b505050505081526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160149054906101000a900460ff1615151515815250509050919050565b6060600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156108ca57602002820191906000526020600020905b8154815260200190600101908083116108b6575b50505050509050919050565b6108de610c7f565b60001515600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514610971576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096890611a0b565b60405180910390fd5b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6109d4610c7f565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3a90611a9d565b60405180910390fd5b610a4c81610cfd565b50565b60011515600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514610ae2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad990611b09565b60405180910390fd5b60008211610b25576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1c906115e9565b60405180910390fd5b6001546003600060015481526020019081526020016000206000018190555042600360006001548152602001908152602001600020600101819055508160036000600154815260200190815260200160002060020181905550806003600060015481526020019081526020016000206003019081610ba39190611881565b503360036000600154815260200190815260200160002060040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600154908060018154018082558091505060019003906000526020600020016000909190919091505560016000815480929190610c7690611b58565b91905055505050565b610c87610dc1565b73ffffffffffffffffffffffffffffffffffffffff16610ca5610684565b73ffffffffffffffffffffffffffffffffffffffff1614610cfb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cf290611bec565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6040518060c0016040528060008152602001600081526020016000815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000151581525090565b6000819050919050565b610e2a81610e17565b82525050565b6000602082019050610e456000830184610e21565b92915050565b6000604051905090565b600080fd5b600080fd5b610e6881610e17565b8114610e7357600080fd5b50565b600081359050610e8581610e5f565b92915050565b600060208284031215610ea157610ea0610e55565b5b6000610eaf84828501610e76565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ee382610eb8565b9050919050565b610ef381610ed8565b8114610efe57600080fd5b50565b600081359050610f1081610eea565b92915050565b600060208284031215610f2c57610f2b610e55565b5b6000610f3a84828501610f01565b91505092915050565b60008115159050919050565b610f5881610f43565b82525050565b6000602082019050610f736000830184610f4f565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610fcc82610f83565b810181811067ffffffffffffffff82111715610feb57610fea610f94565b5b80604052505050565b6000610ffe610e4b565b905061100a8282610fc3565b919050565b600067ffffffffffffffff82111561102a57611029610f94565b5b61103382610f83565b9050602081019050919050565b82818337600083830152505050565b600061106261105d8461100f565b610ff4565b90508281526020810184848401111561107e5761107d610f7e565b5b611089848285611040565b509392505050565b600082601f8301126110a6576110a5610f79565b5b81356110b684826020860161104f565b91505092915050565b6000806000606084860312156110d8576110d7610e55565b5b60006110e686828701610e76565b93505060206110f786828701610e76565b925050604084013567ffffffffffffffff81111561111857611117610e5a565b5b61112486828701611091565b9150509250925092565b61113781610ed8565b82525050565b6000602082019050611152600083018461112e565b92915050565b61116181610e17565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156111a1578082015181840152602081019050611186565b60008484015250505050565b60006111b882611167565b6111c28185611172565b93506111d2818560208601611183565b6111db81610f83565b840191505092915050565b6111ef81610ed8565b82525050565b6111fe81610f43565b82525050565b600060c08301600083015161121c6000860182611158565b50602083015161122f6020860182611158565b5060408301516112426040860182611158565b506060830151848203606086015261125a82826111ad565b915050608083015161126f60808601826111e6565b5060a083015161128260a08601826111f5565b508091505092915050565b600060208201905081810360008301526112a78184611204565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006112e78383611158565b60208301905092915050565b6000602082019050919050565b600061130b826112af565b61131581856112ba565b9350611320836112cb565b8060005b8381101561135157815161133888826112db565b9750611343836112f3565b925050600181019050611324565b5085935050505092915050565b600060208201905081810360008301526113788184611300565b905092915050565b6000806040838503121561139757611396610e55565b5b60006113a585828601610e76565b925050602083013567ffffffffffffffff8111156113c6576113c5610e5a565b5b6113d285828601611091565b9150509250929050565b600082825260208201905092915050565b7f596f7520617265206e6f7420746865206f776e65720000000000000000000000600082015250565b60006114236015836113dc565b915061142e826113ed565b602082019050919050565b6000602082019050818103600083015261145281611416565b9050919050565b7f496e76616c69642073657269616c204e756d6265720000000000000000000000600082015250565b600061148f6015836113dc565b915061149a82611459565b602082019050919050565b600060208201905081810360008301526114be81611482565b9050919050565b7f5468652070726f6475637420697320736f6c6420616c72656164790000000000600082015250565b60006114fb601b836113dc565b9150611506826114c5565b602082019050919050565b6000602082019050818103600083015261152a816114ee565b9050919050565b7f4e6f204163636573730000000000000000000000000000000000000000000000600082015250565b60006115676009836113dc565b915061157282611531565b602082019050919050565b600060208201905081810360008301526115968161155a565b9050919050565b7f4d696e696d756d207765696768742073686f756c642062652031206772616d73600082015250565b60006115d36020836113dc565b91506115de8261159d565b602082019050919050565b60006020820190508181036000830152611602816115c6565b9050919050565b7f50726f6475637420616c726561647920736f6c64000000000000000000000000600082015250565b600061163f6014836113dc565b915061164a82611609565b602082019050919050565b6000602082019050818103600083015261166e81611632565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806116bc57607f821691505b6020821081036116cf576116ce611675565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026117377fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826116fa565b61174186836116fa565b95508019841693508086168417925050509392505050565b6000819050919050565b600061177e61177961177484610e17565b611759565b610e17565b9050919050565b6000819050919050565b61179883611763565b6117ac6117a482611785565b848454611707565b825550505050565b600090565b6117c16117b4565b6117cc81848461178f565b505050565b5b818110156117f0576117e56000826117b9565b6001810190506117d2565b5050565b601f82111561183557611806816116d5565b61180f846116ea565b8101602085101561181e578190505b61183261182a856116ea565b8301826117d1565b50505b505050565b600082821c905092915050565b60006118586000198460080261183a565b1980831691505092915050565b60006118718383611847565b9150826002028217905092915050565b61188a82611167565b67ffffffffffffffff8111156118a3576118a2610f94565b5b6118ad82546116a4565b6118b88282856117f4565b600060209050601f8311600181146118eb57600084156118d9578287015190505b6118e38582611865565b86555061194b565b601f1984166118f9866116d5565b60005b82811015611921578489015182556001820191506020850194506020810190506118fc565b8683101561193e578489015161193a601f891682611847565b8355505b6001600288020188555050505b505050505050565b7f536e6f2e20646f6573206e6f7420657869737473000000000000000000000000600082015250565b60006119896014836113dc565b915061199482611953565b602082019050919050565b600060208201905081810360008301526119b88161197c565b9050919050565b7f416c7265616479207065726d6974746564000000000000000000000000000000600082015250565b60006119f56011836113dc565b9150611a00826119bf565b602082019050919050565b60006020820190508181036000830152611a24816119e8565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611a876026836113dc565b9150611a9282611a2b565b604082019050919050565b60006020820190508181036000830152611ab681611a7a565b9050919050565b7f4e6f207065726d697373696f6e20746f2070726f64756365207061636b616765600082015250565b6000611af36020836113dc565b9150611afe82611abd565b602082019050919050565b60006020820190508181036000830152611b2281611ae6565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611b6382610e17565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611b9557611b94611b29565b5b600182019050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611bd66020836113dc565b9150611be182611ba0565b602082019050919050565b60006020820190508181036000830152611c0581611bc9565b905091905056fea2646970667358221220fe1b80c38fd507f153a8d965ccbf2564f3fa61d7a2cce6a878ee52fc32b3176564736f6c63430008110033";

export class HONEYPRODUCTION__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<HONEYPRODUCTION> {
    return super.deploy(overrides || {}) as Promise<HONEYPRODUCTION>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): HONEYPRODUCTION {
    return super.attach(address) as HONEYPRODUCTION;
  }
  connect(signer: Signer): HONEYPRODUCTION__factory {
    return super.connect(signer) as HONEYPRODUCTION__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HONEYPRODUCTIONInterface {
    return new utils.Interface(_abi) as HONEYPRODUCTIONInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HONEYPRODUCTION {
    return new Contract(address, _abi, signerOrProvider) as HONEYPRODUCTION;
  }
}
